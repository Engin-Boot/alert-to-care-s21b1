// <auto-generated />
using AlertToCareAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AlertToCareAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201020175359_InitialMigrtion")]
    partial class InitialMigrtion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9");

            modelBuilder.Entity("AlertToCareAPI.Models.BedModel", b =>
                {
                    b.Property<string>("BedId")
                        .HasColumnType("TEXT");

                    b.Property<string>("BedOccupancyStatus")
                        .HasColumnType("TEXT");

                    b.Property<string>("IcuModelIcuId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.HasKey("BedId");

                    b.HasIndex("IcuModelIcuId");

                    b.ToTable("BedModel");
                });

            modelBuilder.Entity("AlertToCareAPI.Models.BedOnAlert", b =>
                {
                    b.Property<string>("BedId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .HasColumnType("TEXT");

                    b.Property<float>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("BedId");

                    b.ToTable("Beds");
                });

            modelBuilder.Entity("AlertToCareAPI.Models.IcuModel", b =>
                {
                    b.Property<string>("IcuId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Layout")
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxBeds")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NoOfBeds")
                        .HasColumnType("INTEGER");

                    b.HasKey("IcuId");

                    b.ToTable("Icu");
                });

            modelBuilder.Entity("AlertToCareAPI.Models.PatientModel", b =>
                {
                    b.Property<string>("PatientId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BedId")
                        .HasColumnType("TEXT");

                    b.Property<string>("IcuId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("PatientId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("AlertToCareAPI.Models.BedModel", b =>
                {
                    b.HasOne("AlertToCareAPI.Models.IcuModel", null)
                        .WithMany("Beds")
                        .HasForeignKey("IcuModelIcuId");
                });

            modelBuilder.Entity("AlertToCareAPI.Models.PatientModel", b =>
                {
                    b.OwnsMany("AlertToCareAPI.Models.VitalsModel", "Vitals", b1 =>
                        {
                            b1.Property<string>("PatientModelPatientId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<float>("LowerLimit")
                                .HasColumnType("REAL");

                            b1.Property<string>("Name")
                                .HasColumnType("TEXT");

                            b1.Property<float>("UpperLimit")
                                .HasColumnType("REAL");

                            b1.Property<float>("Value")
                                .HasColumnType("REAL");

                            b1.HasKey("PatientModelPatientId", "Id");

                            b1.ToTable("VitalsModel");

                            b1.WithOwner()
                                .HasForeignKey("PatientModelPatientId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
